---
# tasks file for validation
- name: Verify basic info
  ansible.builtin.assert:
    that:
      - ansible_facts.local_facts.pre_ripu.distribution_major_version | int + 1 == ansible_distribution_major_version
      # TODO add more useful checks here

- name: Verify SElinux is clean
  when: previous_selinux_mode is "targeted"
  block:
    - name: Ensure there are no SELinux denials
      ansible.builtin.shell: >
        ausearch -m AVC,USER_AVC -ts boot 2>&1
      register: ausearch_results
      changed_when: false

    - name: Verify SELinux is set to {{ previous_selinux_mode }}
      ansible.posix.selinux:
        policy: targeted
        state: "{{ previous_selinux_mode }}"
      check_mode: true
      register: selinux_check_results

    - name: Printout issues to investigate
      ansible.builtin.debug:
        msg:
          - "WARNING:"
          - "SElinux appears to not be set to prior state"
      when: selinux_check_results.changed

    - name: Printout issues to investigate
      ansible.builtin.debug:
        msg:
          - "WARNING:"
          - "SElinux needs manual validation"
          - "{{ ausearch_results.stdout }}"
      when: ausearch_results.stdout != "<no matches>"

- name: Get a list of all installed packages
  ansible.builtin.package:
    list: installed
    name: '*'
  changed_when: false
  register: installed_packages

- name: Verify no old RPMs still exist on the system
  ansible.builtin.debug:
    msg:
      - "WARNING:"
      - "Check that all RPMs have been upgraded see list for details"
      - "{{ prior_rpms_list }}"
  when: (prior_rpms_list | length) is 0
  vars:
    prior_rpms_list: installed_packages | regex_search('.*\.el{{ ansible_facts.local_facts.pre_ripu.distribution_major_version }}')
...
